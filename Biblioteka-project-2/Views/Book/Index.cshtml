@model IEnumerable<Biblioteka_project_2.Models.Book>


@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    ViewData["Title"] = "Index";
}

<br />
<h1>Lista książek</h1>
<br />

<form asp-action="Index" method="get">
    <label for="SearchString">Wyszukaj książkę po tytule:</label>
    <div class="form-group">    
        <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" /> 
    <form asp-controller="Category" asp-action="Index" method="post" role="form">
    <div class="form-group" asp-validation-summary="ModelOnly"></div>
        <select
            asp-items="@(new SelectList(ViewBag.ListOfCategories, "Value", "Text"))">
        </select>
    </form>
            <input type="submit" value="Szukaj" class="btn-primary btn btn-out-line" />
    </div>
</form>
<hr />
<a asp-action="Index" class="btn-primary btn btn-out-line">Powrót do całej listy</a>
<hr />
<p>
    <a asp-action="Create" class="btn-primary btn btn-out-line">Dodaj książkę</a>
</p>
<table class="table table-striped table-dark table-bordered table-hover">
    <thead >
        <tr align="center">
            <th>
                    @Html.DisplayNameFor(model => model.imgPath)
            </th>
            <th>
                <a asp-action="Index" class="btn-primary btn btn-out-line" asp-route-sortOrder="@ViewData["TitleSortParam"]">
                    @Html.DisplayNameFor(model => model.Title)
                </a>
            </th>
            <th>
                <a asp-action="Index" class="btn-primary btn btn-out-line" asp-route-sortOrder="@ViewData["CategorySortParam"]">
                    @Html.DisplayNameFor(model => model.Category)
                </a>
            </th>
            <th>
                <a asp-action="Index" class="btn-primary btn btn-out-line" asp-route-sortOrder="@ViewData["AuthorSortParam"]">
                    @Html.DisplayNameFor(model => model.Autor)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ISBN)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td align="center">
                    
                </td>
                <td align="center">
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td align="center">
                    @Html.DisplayFor(modelItem => item.Category)
                </td align="center">
                <td>
                    @Html.DisplayFor(modelItem => item.Autor)
                </td>
                <td align="center">
                    @Html.DisplayFor(modelItem => item.Description)
                </td align="center">
                <td>
                    @Html.DisplayFor(modelItem => item.ISBN)
                </td>
                <td align="center">
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td align="center">
                    @if (User.IsInRole("Admin") || User.IsInRole("Moderator"))
                    {
                        <a asp-action="Edit" width="100%" class="btn btn-primary" asp-route-id=" @item.Id">Edytuj</a>
                    }
                    <br>
                        <a asp-action="Details" width="100%" class="btn btn-info" asp-route-id="@item.Id">Szczegóły</a>
                    <br>
                        <button class="btn btn-success" width="100%" type="button" onclick="add(@item.Id)">Dodaj do koszyka</button>
                    <br>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Delete"  width="100%" class="btn btn-warning" asp-route-id="@item.Id">Usuń</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts{
    <script>
        async function add(bookId) {
             var usernameEl = document.getElementById("username");
        if(usernameEl==null){
            window.location.href = "/Identity/Account/Login";
          //var username=usernameEl.innerText;
          //  if(username.length<1){
          //      window.location.href="/Identity/Account/Login";
          //  }
        }
            try {
                var response = await fetch(`/Cart/AddItem?bookId=${bookId}`);
                if (response.status == 200) {
                    var result = await response.json();
                    var cartCountEl = document.getElementById("cartCount");
                    cartCountEl.innerHTML = result;
                    window.location.href = "#cartCount";
                }
            }
            catch (err) {
                console.log(err);
            }
        }
    </script>
}
